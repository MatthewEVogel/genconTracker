"use strict";(()=>{var e={};e.id=156,e.ids=[156],e.modules={3961:(e,t,r)=>{r.r(t),r.d(t,{config:()=>v,default:()=>l,routeModule:()=>c});var n={};r.r(n),r.d(n,{default:()=>d});var s=r(3480),a=r(8667),i=r(6435),u=r(1853),o=r(8908);async function d(e,t){if("GET"===e.method)try{let{userId:r,canceled:n}=e.query;if(!r||"string"!=typeof r)return t.status(400).json({error:"User ID is required"});let s={userId:r};"true"===n?s.event={isCanceled:!0}:"false"===n&&(s.event={isCanceled:!1});let a=await u.z.userEvent.findMany({where:s,include:{event:!0}});if("true"===n){let e=a.map(e=>({id:e.event.id,title:e.event.title,startDateTime:e.event.startDateTime,canceledAt:e.event.canceledAt,isCanceled:e.event.isCanceled}));return t.status(200).json({events:e})}return t.status(200).json({userEvents:a})}catch(e){return console.error("Error fetching user events:",e),t.status(500).json({error:"Failed to fetch user events"})}if("POST"===e.method)try{let{userId:r,eventId:n}=e.body;if(!r||!n)return t.status(400).json({error:"User ID and Event ID are required"});if(await u.z.userEvent.findUnique({where:{userId_eventId:{userId:r,eventId:n}}}))return t.status(400).json({error:"User is already registered for this event"});let s=await u.z.event.findUnique({where:{id:n}});if(!s)return t.status(404).json({error:"Event not found"});let a=await u.z.userEvent.findMany({where:{userId:r},include:{event:!0}}),i=[];if(s.startDateTime&&s.endDateTime){let e=new Date(s.startDateTime),t=new Date(s.endDateTime);for(let r of a)if(r.event.startDateTime&&r.event.endDateTime){let n=new Date(r.event.startDateTime),s=new Date(r.event.endDateTime);e<s&&t>n&&i.push({eventId:r.event.id,title:r.event.title,startDateTime:r.event.startDateTime,endDateTime:r.event.endDateTime})}}let d=await u.z.userEvent.count({where:{eventId:n}}),l=!!s.ticketsAvailable&&d>=s.ticketsAvailable,v=await u.z.userEvent.create({data:{userId:r,eventId:n},include:{event:!0}});return(0,o.so)().catch(e=>{console.error("Error recalculating ticket assignments after event creation:",e)}),t.status(201).json({userEvent:v,conflicts:i,capacityWarning:l})}catch(e){return console.error("Error creating user event:",e),t.status(500).json({error:"Failed to create user event"})}if("DELETE"===e.method)try{let{userId:r,eventId:n}=e.body;if(!r||!n)return t.status(400).json({error:"User ID and Event ID are required"});if(!await u.z.userEvent.findUnique({where:{userId_eventId:{userId:r,eventId:n}}}))return t.status(404).json({error:"User event not found"});return await u.z.userEvent.delete({where:{userId_eventId:{userId:r,eventId:n}}}),(0,o.so)().catch(e=>{console.error("Error recalculating ticket assignments after event deletion:",e)}),t.status(200).json({message:"User event deleted successfully"})}catch(e){return console.error("Error deleting user event:",e),t.status(500).json({error:"Failed to delete user event"})}return t.status(405).json({error:"Method not allowed"})}let l=(0,i.M)(n,"default"),v=(0,i.M)(n,"config"),c=new s.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/user-events",pathname:"/api/user-events",bundlePath:"",filename:""},userland:n})},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6330:e=>{e.exports=require("@prisma/client")}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[927],()=>r(3961));module.exports=n})();