"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/admin/update-events";
exports.ids = ["pages/api/admin/update-events"];
exports.modules = {

/***/ "(api-node)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/google */ \"next-auth/providers/google\");\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prisma */ \"(api-node)/./lib/prisma.ts\");\n\n\nconst authOptions = {\n    providers: [\n        next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0___default()({\n            clientId: process.env.GOOGLE_CLIENT_ID,\n            clientSecret: process.env.GOOGLE_CLIENT_SECRET\n        })\n    ],\n    callbacks: {\n        async signIn ({ user, account, profile }) {\n            if (account?.provider === \"google\") {\n                try {\n                    // Check if user already exists by email\n                    const existingUser = await _prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.user.findUnique({\n                        where: {\n                            email: user.email\n                        }\n                    });\n                    if (existingUser) {\n                        // Update existing user with Google info if they don't have it\n                        if (!existingUser.googleId) {\n                            await _prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.user.update({\n                                where: {\n                                    id: existingUser.id\n                                },\n                                data: {\n                                    googleId: user.id,\n                                    provider: \"google\",\n                                    image: user.image,\n                                    // Update name if it's different\n                                    firstName: profile?.given_name || existingUser.firstName,\n                                    lastName: profile?.family_name || existingUser.lastName\n                                }\n                            });\n                        }\n                    } else {\n                        // Create new user with Google info\n                        const isAdminAccount = user.email === 'matthewvogel1729@gmail.com';\n                        await _prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.user.create({\n                            data: {\n                                id: user.id,\n                                email: user.email,\n                                firstName: profile?.given_name || user.name?.split(' ')[0] || 'Unknown',\n                                lastName: profile?.family_name || user.name?.split(' ').slice(1).join(' ') || 'User',\n                                googleId: user.id,\n                                provider: \"google\",\n                                image: user.image,\n                                isAdmin: isAdminAccount\n                            }\n                        });\n                    }\n                    return true;\n                } catch (error) {\n                    console.error(\"Error during Google sign in:\", error);\n                    return false;\n                }\n            }\n            return true;\n        },\n        async session ({ session, user }) {\n            // Get the full user data from database\n            const dbUser = await _prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.user.findUnique({\n                where: {\n                    email: session.user?.email\n                }\n            });\n            if (dbUser) {\n                session.user = {\n                    ...session.user,\n                    id: dbUser.id,\n                    firstName: dbUser.firstName,\n                    lastName: dbUser.lastName,\n                    isAdmin: dbUser.isAdmin,\n                    provider: dbUser.provider,\n                    image: dbUser.image\n                };\n            }\n            return session;\n        },\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n            }\n            return token;\n        }\n    },\n    pages: {\n        signIn: '/'\n    },\n    session: {\n        strategy: \"jwt\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBRTtZQUNwQjtZQUNBLE9BQU9tQjtRQUNUO0lBQ0Y7SUFDQUMsT0FBTztRQUNML0IsUUFBUTtJQUNWO0lBQ0EyQixTQUFTO1FBQ1BLLFVBQVU7SUFDWjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0aGV3dm9nZWwvdnNDb2RlIHByb2plY3RzL2dlbmNvblRyYWNrZXIvbGliL2F1dGgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEF1dGhPcHRpb25zIH0gZnJvbSBcIm5leHQtYXV0aFwiXG5pbXBvcnQgR29vZ2xlUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvZ29vZ2xlXCJcbmltcG9ydCB7IHByaXNtYSB9IGZyb20gXCIuL3ByaXNtYVwiXG5cbmV4cG9ydCBjb25zdCBhdXRoT3B0aW9uczogTmV4dEF1dGhPcHRpb25zID0ge1xuICBwcm92aWRlcnM6IFtcbiAgICBHb29nbGVQcm92aWRlcih7XG4gICAgICBjbGllbnRJZDogcHJvY2Vzcy5lbnYuR09PR0xFX0NMSUVOVF9JRCEsXG4gICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfU0VDUkVUISxcbiAgICB9KVxuICBdLFxuICBjYWxsYmFja3M6IHtcbiAgICBhc3luYyBzaWduSW4oeyB1c2VyLCBhY2NvdW50LCBwcm9maWxlIH0pIHtcbiAgICAgIGlmIChhY2NvdW50Py5wcm92aWRlciA9PT0gXCJnb29nbGVcIikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIENoZWNrIGlmIHVzZXIgYWxyZWFkeSBleGlzdHMgYnkgZW1haWxcbiAgICAgICAgICBjb25zdCBleGlzdGluZ1VzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgICAgICAgIHdoZXJlOiB7IGVtYWlsOiB1c2VyLmVtYWlsISB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICAvLyBVcGRhdGUgZXhpc3RpbmcgdXNlciB3aXRoIEdvb2dsZSBpbmZvIGlmIHRoZXkgZG9uJ3QgaGF2ZSBpdFxuICAgICAgICAgICAgaWYgKCFleGlzdGluZ1VzZXIuZ29vZ2xlSWQpIHtcbiAgICAgICAgICAgICAgYXdhaXQgcHJpc21hLnVzZXIudXBkYXRlKHtcbiAgICAgICAgICAgICAgICB3aGVyZTogeyBpZDogZXhpc3RpbmdVc2VyLmlkIH0sXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgZ29vZ2xlSWQ6IHVzZXIuaWQsXG4gICAgICAgICAgICAgICAgICBwcm92aWRlcjogXCJnb29nbGVcIixcbiAgICAgICAgICAgICAgICAgIGltYWdlOiB1c2VyLmltYWdlLFxuICAgICAgICAgICAgICAgICAgLy8gVXBkYXRlIG5hbWUgaWYgaXQncyBkaWZmZXJlbnRcbiAgICAgICAgICAgICAgICAgIGZpcnN0TmFtZTogcHJvZmlsZT8uZ2l2ZW5fbmFtZSB8fCBleGlzdGluZ1VzZXIuZmlyc3ROYW1lLFxuICAgICAgICAgICAgICAgICAgbGFzdE5hbWU6IHByb2ZpbGU/LmZhbWlseV9uYW1lIHx8IGV4aXN0aW5nVXNlci5sYXN0TmFtZSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBDcmVhdGUgbmV3IHVzZXIgd2l0aCBHb29nbGUgaW5mb1xuICAgICAgICAgICAgY29uc3QgaXNBZG1pbkFjY291bnQgPSB1c2VyLmVtYWlsID09PSAnbWF0dGhld3ZvZ2VsMTcyOUBnbWFpbC5jb20nO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBhd2FpdCBwcmlzbWEudXNlci5jcmVhdGUoe1xuICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgaWQ6IHVzZXIuaWQsXG4gICAgICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwhLFxuICAgICAgICAgICAgICAgIGZpcnN0TmFtZTogcHJvZmlsZT8uZ2l2ZW5fbmFtZSB8fCB1c2VyLm5hbWU/LnNwbGl0KCcgJylbMF0gfHwgJ1Vua25vd24nLFxuICAgICAgICAgICAgICAgIGxhc3ROYW1lOiBwcm9maWxlPy5mYW1pbHlfbmFtZSB8fCB1c2VyLm5hbWU/LnNwbGl0KCcgJykuc2xpY2UoMSkuam9pbignICcpIHx8ICdVc2VyJyxcbiAgICAgICAgICAgICAgICBnb29nbGVJZDogdXNlci5pZCxcbiAgICAgICAgICAgICAgICBwcm92aWRlcjogXCJnb29nbGVcIixcbiAgICAgICAgICAgICAgICBpbWFnZTogdXNlci5pbWFnZSxcbiAgICAgICAgICAgICAgICBpc0FkbWluOiBpc0FkbWluQWNjb3VudFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGR1cmluZyBHb29nbGUgc2lnbiBpbjpcIiwgZXJyb3IpO1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIGFzeW5jIHNlc3Npb24oeyBzZXNzaW9uLCB1c2VyIH0pIHtcbiAgICAgIC8vIEdldCB0aGUgZnVsbCB1c2VyIGRhdGEgZnJvbSBkYXRhYmFzZVxuICAgICAgY29uc3QgZGJVc2VyID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZFVuaXF1ZSh7XG4gICAgICAgIHdoZXJlOiB7IGVtYWlsOiBzZXNzaW9uLnVzZXI/LmVtYWlsISB9XG4gICAgICB9KTtcblxuICAgICAgaWYgKGRiVXNlcikge1xuICAgICAgICBzZXNzaW9uLnVzZXIgPSB7XG4gICAgICAgICAgLi4uc2Vzc2lvbi51c2VyLFxuICAgICAgICAgIGlkOiBkYlVzZXIuaWQsXG4gICAgICAgICAgZmlyc3ROYW1lOiBkYlVzZXIuZmlyc3ROYW1lLFxuICAgICAgICAgIGxhc3ROYW1lOiBkYlVzZXIubGFzdE5hbWUsXG4gICAgICAgICAgaXNBZG1pbjogZGJVc2VyLmlzQWRtaW4sXG4gICAgICAgICAgcHJvdmlkZXI6IGRiVXNlci5wcm92aWRlcixcbiAgICAgICAgICBpbWFnZTogZGJVc2VyLmltYWdlXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzZXNzaW9uO1xuICAgIH0sXG4gICAgYXN5bmMgand0KHsgdG9rZW4sIHVzZXIgfSkge1xuICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgdG9rZW4uaWQgPSB1c2VyLmlkO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRva2VuO1xuICAgIH1cbiAgfSxcbiAgcGFnZXM6IHtcbiAgICBzaWduSW46ICcvJywgLy8gUmVkaXJlY3QgdG8gb3VyIGN1c3RvbSBsYW5kaW5nIHBhZ2VcbiAgfSxcbiAgc2Vzc2lvbjoge1xuICAgIHN0cmF0ZWd5OiBcImp3dFwiXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJHb29nbGVQcm92aWRlciIsInByaXNtYSIsImF1dGhPcHRpb25zIiwicHJvdmlkZXJzIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiR09PR0xFX0NMSUVOVF9JRCIsImNsaWVudFNlY3JldCIsIkdPT0dMRV9DTElFTlRfU0VDUkVUIiwiY2FsbGJhY2tzIiwic2lnbkluIiwidXNlciIsImFjY291bnQiLCJwcm9maWxlIiwicHJvdmlkZXIiLCJleGlzdGluZ1VzZXIiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJlbWFpbCIsImdvb2dsZUlkIiwidXBkYXRlIiwiaWQiLCJkYXRhIiwiaW1hZ2UiLCJmaXJzdE5hbWUiLCJnaXZlbl9uYW1lIiwibGFzdE5hbWUiLCJmYW1pbHlfbmFtZSIsImlzQWRtaW5BY2NvdW50IiwiY3JlYXRlIiwibmFtZSIsInNwbGl0Iiwic2xpY2UiLCJqb2luIiwiaXNBZG1pbiIsImVycm9yIiwiY29uc29sZSIsInNlc3Npb24iLCJkYlVzZXIiLCJqd3QiLCJ0b2tlbiIsInBhZ2VzIiwic3RyYXRlZ3kiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./lib/auth.ts\n");

/***/ }),

/***/ "(api-node)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n// Import the PrismaClient from the generated Prisma package\n\n// Define a custom type for globalThis to include our Prisma instance\nconst globalForPrisma = globalThis;\n// Create (or reuse) a single PrismaClient instance\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient(); // use existing or create new\n// In development, store the PrismaClient on globalThis to reuse between reloads\nif (true) {\n    globalForPrisma.prisma = prisma;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9wcmlzbWEudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsNERBQTREO0FBQ2Q7QUFFOUMscUVBQXFFO0FBQ3JFLE1BQU1DLGtCQUFrQkM7QUFJeEIsbURBQW1EO0FBQzVDLE1BQU1DLFNBQ1hGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFHLENBQUMsNkJBQTZCO0FBRTdFLGdGQUFnRjtBQUNoRixJQUFJSSxJQUFxQyxFQUFFO0lBQ3pDSCxnQkFBZ0JFLE1BQU0sR0FBR0E7QUFDM0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0aGV3dm9nZWwvdnNDb2RlIHByb2plY3RzL2dlbmNvblRyYWNrZXIvbGliL3ByaXNtYS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnQgdGhlIFByaXNtYUNsaWVudCBmcm9tIHRoZSBnZW5lcmF0ZWQgUHJpc21hIHBhY2thZ2VcbmltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gXCJAcHJpc21hL2NsaWVudFwiO1xuXG4vLyBEZWZpbmUgYSBjdXN0b20gdHlwZSBmb3IgZ2xvYmFsVGhpcyB0byBpbmNsdWRlIG91ciBQcmlzbWEgaW5zdGFuY2VcbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkOyAvLyBvcHRpb25hbCBQcmlzbWEgaW5zdGFuY2Ugb24gZ2xvYmFsIG9iamVjdFxufTtcblxuLy8gQ3JlYXRlIChvciByZXVzZSkgYSBzaW5nbGUgUHJpc21hQ2xpZW50IGluc3RhbmNlXG5leHBvcnQgY29uc3QgcHJpc21hID1cbiAgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KCk7IC8vIHVzZSBleGlzdGluZyBvciBjcmVhdGUgbmV3XG5cbi8vIEluIGRldmVsb3BtZW50LCBzdG9yZSB0aGUgUHJpc21hQ2xpZW50IG9uIGdsb2JhbFRoaXMgdG8gcmV1c2UgYmV0d2VlbiByZWxvYWRzXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWE7XG59XG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsInByb2Nlc3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fupdate-events&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fupdate-events.ts&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fupdate-events&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fupdate-events.ts&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_admin_update_events_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/admin/update-events.ts */ \"(api-node)/./pages/api/admin/update-events.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_admin_update_events_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_admin_update_events_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/admin/update-events\",\n        pathname: \"/api/admin/update-events\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_admin_update_events_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGYWRtaW4lMkZ1cGRhdGUtZXZlbnRzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZhZG1pbiUyRnVwZGF0ZS1ldmVudHMudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDK0Q7QUFDL0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDhEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw4REFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9hZG1pbi91cGRhdGUtZXZlbnRzLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hZG1pbi91cGRhdGUtZXZlbnRzXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWRtaW4vdXBkYXRlLWV2ZW50c1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fupdate-events&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fupdate-events.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/admin/update-events.ts":
/*!******************************************!*\
  !*** ./pages/api/admin/update-events.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/next */ \"next-auth/next\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_next__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth */ \"(api-node)/./lib/auth.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/prisma */ \"(api-node)/./lib/prisma.ts\");\n/* harmony import */ var _utils_eventUpdateService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/eventUpdateService */ \"(api-node)/./utils/eventUpdateService.ts\");\n\n\n\n\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Method not allowed'\n        });\n    }\n    try {\n        // Check authentication and admin status\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _lib_auth__WEBPACK_IMPORTED_MODULE_1__.authOptions);\n        if (!session?.user?.email) {\n            return res.status(401).json({\n                error: 'Authentication required'\n            });\n        }\n        // Get user from database to check admin status\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findUnique({\n            where: {\n                email: session.user.email\n            },\n            select: {\n                id: true,\n                isAdmin: true,\n                firstName: true,\n                lastName: true\n            }\n        });\n        if (!user) {\n            return res.status(401).json({\n                error: 'User not found'\n            });\n        }\n        if (!user.isAdmin) {\n            return res.status(403).json({\n                error: 'Admin access required'\n            });\n        }\n        console.log(`Admin ${user.firstName} ${user.lastName} (${user.id}) initiated event update`);\n        // Perform the event update\n        const result = await (0,_utils_eventUpdateService__WEBPACK_IMPORTED_MODULE_3__.updateEventsFromGenCon)();\n        // Log the result\n        if (result.success) {\n            console.log(`Event update completed successfully by admin ${user.id}:`, result.stats);\n        } else {\n            console.error(`Event update failed for admin ${user.id}:`, result.message);\n        }\n        // Return the result\n        return res.status(result.success ? 200 : 500).json(result);\n    } catch (error) {\n        console.error('Error in update-events API:', error);\n        const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n        return res.status(500).json({\n            success: false,\n            message: `Server error: ${errorMessage}`,\n            stats: {\n                downloaded: false,\n                totalEvents: 0,\n                newEvents: 0,\n                updatedEvents: 0,\n                canceledEvents: 0,\n                deletedEvents: 0,\n                errors: [\n                    errorMessage\n                ]\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9hZG1pbi91cGRhdGUtZXZlbnRzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNrRDtBQUNUO0FBQ0g7QUFDNEM7QUFFbkUsZUFBZUksUUFBUUMsR0FBbUIsRUFBRUMsR0FBb0I7SUFDN0UsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVE7UUFDekIsT0FBT0QsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQXFCO0lBQzVEO0lBRUEsSUFBSTtRQUNGLHdDQUF3QztRQUN4QyxNQUFNQyxVQUFVLE1BQU1YLGdFQUFnQkEsQ0FBQ0ssS0FBS0MsS0FBS0wsa0RBQVdBO1FBRTVELElBQUksQ0FBQ1UsU0FBU0MsTUFBTUMsT0FBTztZQUN6QixPQUFPUCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQTBCO1FBQ2pFO1FBRUEsK0NBQStDO1FBQy9DLE1BQU1FLE9BQU8sTUFBTVYsK0NBQU1BLENBQUNVLElBQUksQ0FBQ0UsVUFBVSxDQUFDO1lBQ3hDQyxPQUFPO2dCQUFFRixPQUFPRixRQUFRQyxJQUFJLENBQUNDLEtBQUs7WUFBQztZQUNuQ0csUUFBUTtnQkFBRUMsSUFBSTtnQkFBTUMsU0FBUztnQkFBTUMsV0FBVztnQkFBTUMsVUFBVTtZQUFLO1FBQ3JFO1FBRUEsSUFBSSxDQUFDUixNQUFNO1lBQ1QsT0FBT04sSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUFpQjtRQUN4RDtRQUVBLElBQUksQ0FBQ0UsS0FBS00sT0FBTyxFQUFFO1lBQ2pCLE9BQU9aLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBd0I7UUFDL0Q7UUFFQVcsUUFBUUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFVixLQUFLTyxTQUFTLENBQUMsQ0FBQyxFQUFFUCxLQUFLUSxRQUFRLENBQUMsRUFBRSxFQUFFUixLQUFLSyxFQUFFLENBQUMsd0JBQXdCLENBQUM7UUFFMUYsMkJBQTJCO1FBQzNCLE1BQU1NLFNBQXVCLE1BQU1wQixpRkFBc0JBO1FBRXpELGlCQUFpQjtRQUNqQixJQUFJb0IsT0FBT0MsT0FBTyxFQUFFO1lBQ2xCSCxRQUFRQyxHQUFHLENBQUMsQ0FBQyw2Q0FBNkMsRUFBRVYsS0FBS0ssRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFTSxPQUFPRSxLQUFLO1FBQ3RGLE9BQU87WUFDTEosUUFBUVgsS0FBSyxDQUFDLENBQUMsOEJBQThCLEVBQUVFLEtBQUtLLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRU0sT0FBT0csT0FBTztRQUMzRTtRQUVBLG9CQUFvQjtRQUNwQixPQUFPcEIsSUFBSUUsTUFBTSxDQUFDZSxPQUFPQyxPQUFPLEdBQUcsTUFBTSxLQUFLZixJQUFJLENBQUNjO0lBRXJELEVBQUUsT0FBT2IsT0FBTztRQUNkVyxRQUFRWCxLQUFLLENBQUMsK0JBQStCQTtRQUU3QyxNQUFNaUIsZUFBZWpCLGlCQUFpQmtCLFFBQVFsQixNQUFNZ0IsT0FBTyxHQUFHO1FBRTlELE9BQU9wQixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCZSxTQUFTO1lBQ1RFLFNBQVMsQ0FBQyxjQUFjLEVBQUVDLGNBQWM7WUFDeENGLE9BQU87Z0JBQ0xJLFlBQVk7Z0JBQ1pDLGFBQWE7Z0JBQ2JDLFdBQVc7Z0JBQ1hDLGVBQWU7Z0JBQ2ZDLGdCQUFnQjtnQkFDaEJDLGVBQWU7Z0JBQ2ZDLFFBQVE7b0JBQUNSO2lCQUFhO1lBQ3hCO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld3ZvZ2VsL3ZzQ29kZSBwcm9qZWN0cy9nZW5jb25UcmFja2VyL3BhZ2VzL2FwaS9hZG1pbi91cGRhdGUtZXZlbnRzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IGdldFNlcnZlclNlc3Npb24gfSBmcm9tICduZXh0LWF1dGgvbmV4dCc7XG5pbXBvcnQgeyBhdXRoT3B0aW9ucyB9IGZyb20gJ0AvbGliL2F1dGgnO1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnQC9saWIvcHJpc21hJztcbmltcG9ydCB7IHVwZGF0ZUV2ZW50c0Zyb21HZW5Db24sIFVwZGF0ZVJlc3VsdCB9IGZyb20gJ0AvdXRpbHMvZXZlbnRVcGRhdGVTZXJ2aWNlJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgZXJyb3I6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICAvLyBDaGVjayBhdXRoZW50aWNhdGlvbiBhbmQgYWRtaW4gc3RhdHVzXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlcnZlclNlc3Npb24ocmVxLCByZXMsIGF1dGhPcHRpb25zKTtcbiAgICBcbiAgICBpZiAoIXNlc3Npb24/LnVzZXI/LmVtYWlsKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogJ0F1dGhlbnRpY2F0aW9uIHJlcXVpcmVkJyB9KTtcbiAgICB9XG5cbiAgICAvLyBHZXQgdXNlciBmcm9tIGRhdGFiYXNlIHRvIGNoZWNrIGFkbWluIHN0YXR1c1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgIHdoZXJlOiB7IGVtYWlsOiBzZXNzaW9uLnVzZXIuZW1haWwgfSxcbiAgICAgIHNlbGVjdDogeyBpZDogdHJ1ZSwgaXNBZG1pbjogdHJ1ZSwgZmlyc3ROYW1lOiB0cnVlLCBsYXN0TmFtZTogdHJ1ZSB9XG4gICAgfSk7XG5cbiAgICBpZiAoIXVzZXIpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiAnVXNlciBub3QgZm91bmQnIH0pO1xuICAgIH1cblxuICAgIGlmICghdXNlci5pc0FkbWluKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDMpLmpzb24oeyBlcnJvcjogJ0FkbWluIGFjY2VzcyByZXF1aXJlZCcgfSk7XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coYEFkbWluICR7dXNlci5maXJzdE5hbWV9ICR7dXNlci5sYXN0TmFtZX0gKCR7dXNlci5pZH0pIGluaXRpYXRlZCBldmVudCB1cGRhdGVgKTtcblxuICAgIC8vIFBlcmZvcm0gdGhlIGV2ZW50IHVwZGF0ZVxuICAgIGNvbnN0IHJlc3VsdDogVXBkYXRlUmVzdWx0ID0gYXdhaXQgdXBkYXRlRXZlbnRzRnJvbUdlbkNvbigpO1xuXG4gICAgLy8gTG9nIHRoZSByZXN1bHRcbiAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgIGNvbnNvbGUubG9nKGBFdmVudCB1cGRhdGUgY29tcGxldGVkIHN1Y2Nlc3NmdWxseSBieSBhZG1pbiAke3VzZXIuaWR9OmAsIHJlc3VsdC5zdGF0cyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEV2ZW50IHVwZGF0ZSBmYWlsZWQgZm9yIGFkbWluICR7dXNlci5pZH06YCwgcmVzdWx0Lm1lc3NhZ2UpO1xuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgcmVzdWx0XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMocmVzdWx0LnN1Y2Nlc3MgPyAyMDAgOiA1MDApLmpzb24ocmVzdWx0KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIHVwZGF0ZS1ldmVudHMgQVBJOicsIGVycm9yKTtcbiAgICBcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yIG9jY3VycmVkJztcbiAgICBcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBtZXNzYWdlOiBgU2VydmVyIGVycm9yOiAke2Vycm9yTWVzc2FnZX1gLFxuICAgICAgc3RhdHM6IHtcbiAgICAgICAgZG93bmxvYWRlZDogZmFsc2UsXG4gICAgICAgIHRvdGFsRXZlbnRzOiAwLFxuICAgICAgICBuZXdFdmVudHM6IDAsXG4gICAgICAgIHVwZGF0ZWRFdmVudHM6IDAsXG4gICAgICAgIGNhbmNlbGVkRXZlbnRzOiAwLFxuICAgICAgICBkZWxldGVkRXZlbnRzOiAwLFxuICAgICAgICBlcnJvcnM6IFtlcnJvck1lc3NhZ2VdXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJnZXRTZXJ2ZXJTZXNzaW9uIiwiYXV0aE9wdGlvbnMiLCJwcmlzbWEiLCJ1cGRhdGVFdmVudHNGcm9tR2VuQ29uIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsInNlc3Npb24iLCJ1c2VyIiwiZW1haWwiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJzZWxlY3QiLCJpZCIsImlzQWRtaW4iLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsImNvbnNvbGUiLCJsb2ciLCJyZXN1bHQiLCJzdWNjZXNzIiwic3RhdHMiLCJtZXNzYWdlIiwiZXJyb3JNZXNzYWdlIiwiRXJyb3IiLCJkb3dubG9hZGVkIiwidG90YWxFdmVudHMiLCJuZXdFdmVudHMiLCJ1cGRhdGVkRXZlbnRzIiwiY2FuY2VsZWRFdmVudHMiLCJkZWxldGVkRXZlbnRzIiwiZXJyb3JzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/admin/update-events.ts\n");

/***/ }),

/***/ "(api-node)/./utils/eventUpdateService.ts":
/*!*************************************!*\
  !*** ./utils/eventUpdateService.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateEventsFromGenCon: () => (/* binding */ updateEventsFromGenCon)\n/* harmony export */ });\n/* harmony import */ var adm_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! adm-zip */ \"adm-zip\");\n/* harmony import */ var adm_zip__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(adm_zip__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(api-node)/./lib/prisma.ts\");\n/* harmony import */ var _xlsxToTsv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./xlsxToTsv */ \"(api-node)/./utils/xlsxToTsv.ts\");\n\n\n\nconst GENCON_EVENTS_URL = 'https://www.gencon.com/downloads/events.zip';\nasync function updateEventsFromGenCon() {\n    const result = {\n        success: false,\n        message: '',\n        stats: {\n            downloaded: false,\n            totalEvents: 0,\n            newEvents: 0,\n            updatedEvents: 0,\n            canceledEvents: 0,\n            deletedEvents: 0,\n            errors: []\n        }\n    };\n    try {\n        console.log('Starting GenCon events update...');\n        // Step 1: Download the ZIP file\n        console.log('Downloading events.zip from GenCon...');\n        const response = await fetch(GENCON_EVENTS_URL);\n        if (!response.ok) {\n            throw new Error(`Failed to download events.zip: ${response.status} ${response.statusText}`);\n        }\n        const zipBuffer = Buffer.from(await response.arrayBuffer());\n        result.stats.downloaded = true;\n        console.log('Successfully downloaded events.zip');\n        // Step 2: Extract and parse the XLSX file\n        console.log('Extracting and parsing XLSX file...');\n        const zip = new (adm_zip__WEBPACK_IMPORTED_MODULE_0___default())(zipBuffer);\n        const zipEntries = zip.getEntries();\n        // Find the XLSX file in the ZIP\n        const xlsxEntry = zipEntries.find((entry)=>entry.entryName.toLowerCase().endsWith('.xlsx') && !entry.isDirectory);\n        if (!xlsxEntry) {\n            throw new Error('No XLSX file found in the downloaded ZIP archive');\n        }\n        console.log(`Found XLSX file: ${xlsxEntry.entryName}`);\n        const xlsxBuffer = xlsxEntry.getData();\n        // Parse the XLSX file\n        const newEvents = (0,_xlsxToTsv__WEBPACK_IMPORTED_MODULE_2__.parseXlsxToEvents)(xlsxBuffer);\n        result.stats.totalEvents = newEvents.length;\n        console.log(`Parsed ${newEvents.length} events from XLSX`);\n        // Step 3: Perform differential update\n        console.log('Performing differential database update...');\n        await performDifferentialUpdate(newEvents, result.stats);\n        result.success = true;\n        result.message = `Successfully updated events. New: ${result.stats.newEvents}, Updated: ${result.stats.updatedEvents}, Canceled: ${result.stats.canceledEvents}, Deleted: ${result.stats.deletedEvents}`;\n        console.log('Event update completed successfully');\n        console.log(result.message);\n    } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n        result.success = false;\n        result.message = `Event update failed: ${errorMessage}`;\n        result.stats.errors.push(errorMessage);\n        console.error('Event update failed:', error);\n    }\n    return result;\n}\nasync function performDifferentialUpdate(newEvents, stats) {\n    // Get all existing events from database\n    const existingEvents = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.event.findMany({\n        select: {\n            id: true,\n            title: true,\n            shortDescription: true,\n            eventType: true,\n            gameSystem: true,\n            startDateTime: true,\n            duration: true,\n            endDateTime: true,\n            ageRequired: true,\n            experienceRequired: true,\n            materialsRequired: true,\n            cost: true,\n            location: true,\n            ticketsAvailable: true,\n            isCanceled: true,\n            _count: {\n                select: {\n                    userEvents: true\n                }\n            }\n        }\n    });\n    const existingEventMap = new Map(existingEvents.map((event)=>[\n            event.id,\n            event\n        ]));\n    const newEventIds = new Set(newEvents.map((event)=>event.id));\n    // Process new/updated events\n    for (const newEvent of newEvents){\n        try {\n            const existingEvent = existingEventMap.get(newEvent.id);\n            if (!existingEvent) {\n                // New event - create it\n                await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.event.create({\n                    data: {\n                        id: newEvent.id,\n                        title: newEvent.title,\n                        shortDescription: newEvent.shortDescription || null,\n                        eventType: newEvent.eventType || null,\n                        gameSystem: newEvent.gameSystem || null,\n                        startDateTime: newEvent.startDateTime || null,\n                        duration: newEvent.duration || null,\n                        endDateTime: newEvent.endDateTime || null,\n                        ageRequired: newEvent.ageRequired || null,\n                        experienceRequired: newEvent.experienceRequired || null,\n                        materialsRequired: newEvent.materialsRequired || null,\n                        cost: newEvent.cost || null,\n                        location: newEvent.location || null,\n                        ticketsAvailable: newEvent.ticketsAvailable || null,\n                        priority: 1,\n                        isCanceled: false\n                    }\n                });\n                stats.newEvents++;\n                console.log(`Created new event: ${newEvent.id} - ${newEvent.title}`);\n            } else {\n                // Existing event - check if it needs updating\n                const needsUpdate = existingEvent.title !== newEvent.title || existingEvent.shortDescription !== (newEvent.shortDescription || null) || existingEvent.eventType !== (newEvent.eventType || null) || existingEvent.gameSystem !== (newEvent.gameSystem || null) || existingEvent.startDateTime !== (newEvent.startDateTime || null) || existingEvent.duration !== (newEvent.duration || null) || existingEvent.endDateTime !== (newEvent.endDateTime || null) || existingEvent.ageRequired !== (newEvent.ageRequired || null) || existingEvent.experienceRequired !== (newEvent.experienceRequired || null) || existingEvent.materialsRequired !== (newEvent.materialsRequired || null) || existingEvent.cost !== (newEvent.cost || null) || existingEvent.location !== (newEvent.location || null) || existingEvent.ticketsAvailable !== (newEvent.ticketsAvailable || null) || existingEvent.isCanceled // If it was canceled, un-cancel it\n                ;\n                if (needsUpdate) {\n                    await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.event.update({\n                        where: {\n                            id: newEvent.id\n                        },\n                        data: {\n                            title: newEvent.title,\n                            shortDescription: newEvent.shortDescription || null,\n                            eventType: newEvent.eventType || null,\n                            gameSystem: newEvent.gameSystem || null,\n                            startDateTime: newEvent.startDateTime || null,\n                            duration: newEvent.duration || null,\n                            endDateTime: newEvent.endDateTime || null,\n                            ageRequired: newEvent.ageRequired || null,\n                            experienceRequired: newEvent.experienceRequired || null,\n                            materialsRequired: newEvent.materialsRequired || null,\n                            cost: newEvent.cost || null,\n                            location: newEvent.location || null,\n                            ticketsAvailable: newEvent.ticketsAvailable || null,\n                            isCanceled: false,\n                            canceledAt: null,\n                            lastUpdated: new Date()\n                        }\n                    });\n                    stats.updatedEvents++;\n                    console.log(`Updated event: ${newEvent.id} - ${newEvent.title}`);\n                }\n            }\n        } catch (error) {\n            const errorMsg = `Error processing event ${newEvent.id}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n            stats.errors.push(errorMsg);\n            console.error(errorMsg);\n        }\n    }\n    // Process canceled events (events that exist in DB but not in new data)\n    for (const existingEvent of existingEvents){\n        if (!newEventIds.has(existingEvent.id) && !existingEvent.isCanceled) {\n            try {\n                if (existingEvent._count.userEvents > 0) {\n                    // Event has users - mark as canceled\n                    await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.event.update({\n                        where: {\n                            id: existingEvent.id\n                        },\n                        data: {\n                            isCanceled: true,\n                            canceledAt: new Date(),\n                            lastUpdated: new Date()\n                        }\n                    });\n                    stats.canceledEvents++;\n                    console.log(`Marked event as canceled: ${existingEvent.id} - ${existingEvent.title}`);\n                } else {\n                    // Event has no users - safe to delete\n                    await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.event.delete({\n                        where: {\n                            id: existingEvent.id\n                        }\n                    });\n                    stats.deletedEvents++;\n                    console.log(`Deleted unused event: ${existingEvent.id} - ${existingEvent.title}`);\n                }\n            } catch (error) {\n                const errorMsg = `Error handling canceled event ${existingEvent.id}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n                stats.errors.push(errorMsg);\n                console.error(errorMsg);\n            }\n        }\n    }\n    // Clean up canceled events that no longer have users\n    try {\n        const canceledEventsWithoutUsers = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.event.findMany({\n            where: {\n                isCanceled: true,\n                userEvents: {\n                    none: {}\n                }\n            }\n        });\n        for (const event of canceledEventsWithoutUsers){\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.event.delete({\n                where: {\n                    id: event.id\n                }\n            });\n            stats.deletedEvents++;\n            console.log(`Cleaned up canceled event with no users: ${event.id} - ${event.title}`);\n        }\n    } catch (error) {\n        const errorMsg = `Error cleaning up canceled events: ${error instanceof Error ? error.message : 'Unknown error'}`;\n        stats.errors.push(errorMsg);\n        console.error(errorMsg);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./utils/eventUpdateService.ts\n");

/***/ }),

/***/ "(api-node)/./utils/xlsxToTsv.ts":
/*!****************************!*\
  !*** ./utils/xlsxToTsv.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertXlsxToTsv: () => (/* binding */ convertXlsxToTsv),\n/* harmony export */   parseXlsxToEvents: () => (/* binding */ parseXlsxToEvents)\n/* harmony export */ });\n/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xlsx */ \"xlsx\");\n/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xlsx__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction parseXlsxToEvents(buffer) {\n    try {\n        // Read the workbook from buffer\n        const workbook = xlsx__WEBPACK_IMPORTED_MODULE_0__.read(buffer, {\n            type: 'buffer'\n        });\n        // Get the first worksheet\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        // Convert to JSON array\n        const jsonData = xlsx__WEBPACK_IMPORTED_MODULE_0__.utils.sheet_to_json(worksheet, {\n            header: 1\n        });\n        if (jsonData.length < 2) {\n            throw new Error('XLSX file appears to be empty or has no data rows');\n        }\n        // Skip header row and process data\n        const dataRows = jsonData.slice(1);\n        const events = [];\n        for (const row of dataRows){\n            // Skip empty rows or rows without required data\n            if (!row || row.length < 31 || !row[0] || !row[2]) {\n                continue;\n            }\n            try {\n                // Map XLSX columns to our database fields (same mapping as TSV)\n                const eventData = {\n                    id: String(row[0]).trim(),\n                    title: String(row[2]).trim(),\n                    shortDescription: row[3] ? String(row[3]).trim() : undefined,\n                    eventType: row[5] ? String(row[5]).trim() : undefined,\n                    gameSystem: row[6] ? String(row[6]).trim() : undefined,\n                    startDateTime: row[14] ? String(row[14]).trim() : undefined,\n                    duration: row[15] ? String(row[15]).trim() : undefined,\n                    endDateTime: row[16] ? String(row[16]).trim() : undefined,\n                    ageRequired: row[10] ? String(row[10]).trim() : undefined,\n                    experienceRequired: row[11] ? String(row[11]).trim() : undefined,\n                    materialsRequired: row[12] ? String(row[12]).trim() : undefined,\n                    cost: row[25] ? String(row[25]).trim() : undefined,\n                    location: row[26] ? String(row[26]).trim() : undefined,\n                    ticketsAvailable: row[30] ? parseInt(String(row[30]).trim()) || undefined : undefined\n                };\n                events.push(eventData);\n            } catch (error) {\n                console.warn(`Error parsing event row with ID ${row[0]}:`, error);\n                continue;\n            }\n        }\n        console.log(`Successfully parsed ${events.length} events from XLSX`);\n        return events;\n    } catch (error) {\n        console.error('Error parsing XLSX file:', error);\n        throw new Error(`Failed to parse XLSX file: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n}\nfunction convertXlsxToTsv(buffer) {\n    try {\n        // Read the workbook from buffer\n        const workbook = xlsx__WEBPACK_IMPORTED_MODULE_0__.read(buffer, {\n            type: 'buffer'\n        });\n        // Get the first worksheet\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        // Convert to TSV format\n        const tsvData = xlsx__WEBPACK_IMPORTED_MODULE_0__.utils.sheet_to_csv(worksheet, {\n            FS: '\\t'\n        });\n        return tsvData;\n    } catch (error) {\n        console.error('Error converting XLSX to TSV:', error);\n        throw new Error(`Failed to convert XLSX to TSV: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O1lBQ0Y7UUFDRjtRQUVBQyxRQUFRRSxHQUFHLENBQUMsQ0FBQyxvQkFBb0IsRUFBRXpCLE9BQU9KLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQztRQUNuRSxPQUFPSTtJQUVULEVBQUUsT0FBT3NCLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDRCQUE0QkE7UUFDMUMsTUFBTSxJQUFJekIsTUFBTSxDQUFDLDJCQUEyQixFQUFFeUIsaUJBQWlCekIsUUFBUXlCLE1BQU1JLE9BQU8sR0FBRyxpQkFBaUI7SUFDMUc7QUFDRjtBQUVPLFNBQVNDLGlCQUFpQjNDLE1BQWM7SUFDN0MsSUFBSTtRQUNGLGdDQUFnQztRQUNoQyxNQUFNQyxXQUFXSCxzQ0FBUyxDQUFDRSxRQUFRO1lBQUVHLE1BQU07UUFBUztRQUVwRCwwQkFBMEI7UUFDMUIsTUFBTUMsWUFBWUgsU0FBU0ksVUFBVSxDQUFDLEVBQUU7UUFDeEMsTUFBTUMsWUFBWUwsU0FBU00sTUFBTSxDQUFDSCxVQUFVO1FBRTVDLHdCQUF3QjtRQUN4QixNQUFNd0MsVUFBVTlDLHVDQUFVLENBQUMrQyxZQUFZLENBQUN2QyxXQUFXO1lBQUV3QyxJQUFJO1FBQUs7UUFFOUQsT0FBT0Y7SUFDVCxFQUFFLE9BQU9OLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLGlDQUFpQ0E7UUFDL0MsTUFBTSxJQUFJekIsTUFBTSxDQUFDLCtCQUErQixFQUFFeUIsaUJBQWlCekIsUUFBUXlCLE1BQU1JLE9BQU8sR0FBRyxpQkFBaUI7SUFDOUc7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL21hdHRoZXd2b2dlbC92c0NvZGUgcHJvamVjdHMvZ2VuY29uVHJhY2tlci91dGlscy94bHN4VG9Uc3YudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgWExTWCBmcm9tICd4bHN4JztcblxuZXhwb3J0IGludGVyZmFjZSBQYXJzZWRFdmVudERhdGEge1xuICBpZDogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICBzaG9ydERlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBldmVudFR5cGU/OiBzdHJpbmc7XG4gIGdhbWVTeXN0ZW0/OiBzdHJpbmc7XG4gIHN0YXJ0RGF0ZVRpbWU/OiBzdHJpbmc7XG4gIGR1cmF0aW9uPzogc3RyaW5nO1xuICBlbmREYXRlVGltZT86IHN0cmluZztcbiAgYWdlUmVxdWlyZWQ/OiBzdHJpbmc7XG4gIGV4cGVyaWVuY2VSZXF1aXJlZD86IHN0cmluZztcbiAgbWF0ZXJpYWxzUmVxdWlyZWQ/OiBzdHJpbmc7XG4gIGNvc3Q/OiBzdHJpbmc7XG4gIGxvY2F0aW9uPzogc3RyaW5nO1xuICB0aWNrZXRzQXZhaWxhYmxlPzogbnVtYmVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VYbHN4VG9FdmVudHMoYnVmZmVyOiBCdWZmZXIpOiBQYXJzZWRFdmVudERhdGFbXSB7XG4gIHRyeSB7XG4gICAgLy8gUmVhZCB0aGUgd29ya2Jvb2sgZnJvbSBidWZmZXJcbiAgICBjb25zdCB3b3JrYm9vayA9IFhMU1gucmVhZChidWZmZXIsIHsgdHlwZTogJ2J1ZmZlcicgfSk7XG4gICAgXG4gICAgLy8gR2V0IHRoZSBmaXJzdCB3b3Jrc2hlZXRcbiAgICBjb25zdCBzaGVldE5hbWUgPSB3b3JrYm9vay5TaGVldE5hbWVzWzBdO1xuICAgIGNvbnN0IHdvcmtzaGVldCA9IHdvcmtib29rLlNoZWV0c1tzaGVldE5hbWVdO1xuICAgIFxuICAgIC8vIENvbnZlcnQgdG8gSlNPTiBhcnJheVxuICAgIGNvbnN0IGpzb25EYXRhID0gWExTWC51dGlscy5zaGVldF90b19qc29uKHdvcmtzaGVldCwgeyBoZWFkZXI6IDEgfSkgYXMgYW55W11bXTtcbiAgICBcbiAgICBpZiAoanNvbkRhdGEubGVuZ3RoIDwgMikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdYTFNYIGZpbGUgYXBwZWFycyB0byBiZSBlbXB0eSBvciBoYXMgbm8gZGF0YSByb3dzJyk7XG4gICAgfVxuICAgIFxuICAgIC8vIFNraXAgaGVhZGVyIHJvdyBhbmQgcHJvY2VzcyBkYXRhXG4gICAgY29uc3QgZGF0YVJvd3MgPSBqc29uRGF0YS5zbGljZSgxKTtcbiAgICBjb25zdCBldmVudHM6IFBhcnNlZEV2ZW50RGF0YVtdID0gW107XG4gICAgXG4gICAgZm9yIChjb25zdCByb3cgb2YgZGF0YVJvd3MpIHtcbiAgICAgIC8vIFNraXAgZW1wdHkgcm93cyBvciByb3dzIHdpdGhvdXQgcmVxdWlyZWQgZGF0YVxuICAgICAgaWYgKCFyb3cgfHwgcm93Lmxlbmd0aCA8IDMxIHx8ICFyb3dbMF0gfHwgIXJvd1syXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gTWFwIFhMU1ggY29sdW1ucyB0byBvdXIgZGF0YWJhc2UgZmllbGRzIChzYW1lIG1hcHBpbmcgYXMgVFNWKVxuICAgICAgICBjb25zdCBldmVudERhdGE6IFBhcnNlZEV2ZW50RGF0YSA9IHtcbiAgICAgICAgICBpZDogU3RyaW5nKHJvd1swXSkudHJpbSgpLCAvLyBHYW1lIElEXG4gICAgICAgICAgdGl0bGU6IFN0cmluZyhyb3dbMl0pLnRyaW0oKSwgLy8gVGl0bGVcbiAgICAgICAgICBzaG9ydERlc2NyaXB0aW9uOiByb3dbM10gPyBTdHJpbmcocm93WzNdKS50cmltKCkgOiB1bmRlZmluZWQsIC8vIFNob3J0IERlc2NyaXB0aW9uXG4gICAgICAgICAgZXZlbnRUeXBlOiByb3dbNV0gPyBTdHJpbmcocm93WzVdKS50cmltKCkgOiB1bmRlZmluZWQsIC8vIEV2ZW50IFR5cGVcbiAgICAgICAgICBnYW1lU3lzdGVtOiByb3dbNl0gPyBTdHJpbmcocm93WzZdKS50cmltKCkgOiB1bmRlZmluZWQsIC8vIEdhbWUgU3lzdGVtXG4gICAgICAgICAgc3RhcnREYXRlVGltZTogcm93WzE0XSA/IFN0cmluZyhyb3dbMTRdKS50cmltKCkgOiB1bmRlZmluZWQsIC8vIFN0YXJ0IERhdGUgJiBUaW1lXG4gICAgICAgICAgZHVyYXRpb246IHJvd1sxNV0gPyBTdHJpbmcocm93WzE1XSkudHJpbSgpIDogdW5kZWZpbmVkLCAvLyBEdXJhdGlvblxuICAgICAgICAgIGVuZERhdGVUaW1lOiByb3dbMTZdID8gU3RyaW5nKHJvd1sxNl0pLnRyaW0oKSA6IHVuZGVmaW5lZCwgLy8gRW5kIERhdGUgJiBUaW1lXG4gICAgICAgICAgYWdlUmVxdWlyZWQ6IHJvd1sxMF0gPyBTdHJpbmcocm93WzEwXSkudHJpbSgpIDogdW5kZWZpbmVkLCAvLyBBZ2UgUmVxdWlyZWRcbiAgICAgICAgICBleHBlcmllbmNlUmVxdWlyZWQ6IHJvd1sxMV0gPyBTdHJpbmcocm93WzExXSkudHJpbSgpIDogdW5kZWZpbmVkLCAvLyBFeHBlcmllbmNlIFJlcXVpcmVkXG4gICAgICAgICAgbWF0ZXJpYWxzUmVxdWlyZWQ6IHJvd1sxMl0gPyBTdHJpbmcocm93WzEyXSkudHJpbSgpIDogdW5kZWZpbmVkLCAvLyBNYXRlcmlhbHMgUmVxdWlyZWRcbiAgICAgICAgICBjb3N0OiByb3dbMjVdID8gU3RyaW5nKHJvd1syNV0pLnRyaW0oKSA6IHVuZGVmaW5lZCwgLy8gQ29zdCAkXG4gICAgICAgICAgbG9jYXRpb246IHJvd1syNl0gPyBTdHJpbmcocm93WzI2XSkudHJpbSgpIDogdW5kZWZpbmVkLCAvLyBMb2NhdGlvblxuICAgICAgICAgIHRpY2tldHNBdmFpbGFibGU6IHJvd1szMF0gPyBwYXJzZUludChTdHJpbmcocm93WzMwXSkudHJpbSgpKSB8fCB1bmRlZmluZWQgOiB1bmRlZmluZWQsIC8vIFRpY2tldHMgQXZhaWxhYmxlXG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICBldmVudHMucHVzaChldmVudERhdGEpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGBFcnJvciBwYXJzaW5nIGV2ZW50IHJvdyB3aXRoIElEICR7cm93WzBdfTpgLCBlcnJvcik7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBjb25zb2xlLmxvZyhgU3VjY2Vzc2Z1bGx5IHBhcnNlZCAke2V2ZW50cy5sZW5ndGh9IGV2ZW50cyBmcm9tIFhMU1hgKTtcbiAgICByZXR1cm4gZXZlbnRzO1xuICAgIFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHBhcnNpbmcgWExTWCBmaWxlOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBwYXJzZSBYTFNYIGZpbGU6ICR7ZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcid9YCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRYbHN4VG9Uc3YoYnVmZmVyOiBCdWZmZXIpOiBzdHJpbmcge1xuICB0cnkge1xuICAgIC8vIFJlYWQgdGhlIHdvcmtib29rIGZyb20gYnVmZmVyXG4gICAgY29uc3Qgd29ya2Jvb2sgPSBYTFNYLnJlYWQoYnVmZmVyLCB7IHR5cGU6ICdidWZmZXInIH0pO1xuICAgIFxuICAgIC8vIEdldCB0aGUgZmlyc3Qgd29ya3NoZWV0XG4gICAgY29uc3Qgc2hlZXROYW1lID0gd29ya2Jvb2suU2hlZXROYW1lc1swXTtcbiAgICBjb25zdCB3b3Jrc2hlZXQgPSB3b3JrYm9vay5TaGVldHNbc2hlZXROYW1lXTtcbiAgICBcbiAgICAvLyBDb252ZXJ0IHRvIFRTViBmb3JtYXRcbiAgICBjb25zdCB0c3ZEYXRhID0gWExTWC51dGlscy5zaGVldF90b19jc3Yod29ya3NoZWV0LCB7IEZTOiAnXFx0JyB9KTtcbiAgICBcbiAgICByZXR1cm4gdHN2RGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjb252ZXJ0aW5nIFhMU1ggdG8gVFNWOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBjb252ZXJ0IFhMU1ggdG8gVFNWOiAke2Vycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InfWApO1xuICB9XG59XG4iXSwibmFtZXMiOlsiWExTWCIsInBhcnNlWGxzeFRvRXZlbnRzIiwiYnVmZmVyIiwid29ya2Jvb2siLCJyZWFkIiwidHlwZSIsInNoZWV0TmFtZSIsIlNoZWV0TmFtZXMiLCJ3b3Jrc2hlZXQiLCJTaGVldHMiLCJqc29uRGF0YSIsInV0aWxzIiwic2hlZXRfdG9fanNvbiIsImhlYWRlciIsImxlbmd0aCIsIkVycm9yIiwiZGF0YVJvd3MiLCJzbGljZSIsImV2ZW50cyIsInJvdyIsImV2ZW50RGF0YSIsImlkIiwiU3RyaW5nIiwidHJpbSIsInRpdGxlIiwic2hvcnREZXNjcmlwdGlvbiIsInVuZGVmaW5lZCIsImV2ZW50VHlwZSIsImdhbWVTeXN0ZW0iLCJzdGFydERhdGVUaW1lIiwiZHVyYXRpb24iLCJlbmREYXRlVGltZSIsImFnZVJlcXVpcmVkIiwiZXhwZXJpZW5jZVJlcXVpcmVkIiwibWF0ZXJpYWxzUmVxdWlyZWQiLCJjb3N0IiwibG9jYXRpb24iLCJ0aWNrZXRzQXZhaWxhYmxlIiwicGFyc2VJbnQiLCJwdXNoIiwiZXJyb3IiLCJjb25zb2xlIiwid2FybiIsImxvZyIsIm1lc3NhZ2UiLCJjb252ZXJ0WGxzeFRvVHN2IiwidHN2RGF0YSIsInNoZWV0X3RvX2NzdiIsIkZTIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./utils/xlsxToTsv.ts\n");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "adm-zip":
/*!**************************!*\
  !*** external "adm-zip" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("adm-zip");

/***/ }),

/***/ "next-auth/next":
/*!*********************************!*\
  !*** external "next-auth/next" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("next-auth/next");

/***/ }),

/***/ "next-auth/providers/google":
/*!*********************************************!*\
  !*** external "next-auth/providers/google" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/google");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "xlsx":
/*!***********************!*\
  !*** external "xlsx" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("xlsx");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fupdate-events&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fupdate-events.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();